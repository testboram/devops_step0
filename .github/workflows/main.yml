name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - master  # main|master 브랜치에 푸시될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
    # 1) 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v2  ## git action에서 사용하는 플러그인 (master 브랜치 복사)

    # 2) JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'
        
    # 3) 빌드하기 
    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build

    # 4_1) 개인키 발급
    #      secrets.SERVER_SSH_KEY : 키값이 등록된 환경변수 (외부에 노출이 안되도록)
    - name: Set SSH key permissions
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    # 4_2) 개인키 발급 
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    # 5) 접속할 운영 서버의 정보 등록 
    - name: Add known_hosts
      run: |
        ssh-keyscan -t ed25519 3.35.133.109 >> ~/.ssh/known_hosts

    #- name: 기존프로세스 종료 
    #  run: |
    #    kill -9 $(ps -ef | grep devops | grep -v grep | head -n 1 | awk '{print $2}') || true

    # 6) 빌드된 jar 파일을 운영서버로 배포 
    - name: Deploy to Server
      run: scp build/libs/*.jar ubuntu@3.35.133.109:~/

    # 7) ssh로 운영서버에 접속 후 배포된 파일 실행
    - name: Run SSH commands
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@3.35.133.109 << 'EOF'
          pkill -f 'java -jar' || true
          nohup java -jar ~/devops_step0-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
        EOF
